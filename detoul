#!/bin/bash

exit_code="0"

# http://stackoverflow.com/questions/918886/how-do-i-split-a-string-on-a-delimiter-in-bash
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
export PATH="$PATH:$(cd "$( dirname "$SOURCE" )" && pwd -P)"

export GIT_WD="$(git-pwd)"

cd "$GIT_WD"

if [ "$GIT_REMOTE" == "" ]; then
  export GIT_REMOTE="$(git remote | xargs echo | head -n 1)"
fi
export DETOUL_ORIG_BRANCH="$(git branch | grep "^*" | cut -c3-)"

export DETOUL_TMP=".git/detoul.$(echo "$RANDOM$RANDOM" | git hash-object --stdin)"

cd "$GIT_WD"
mkdir "$DETOUL_TMP"

quit() {
  cd "$GIT_WD"
  rm -fr "$DETOUL_TMP"
  exit "$exit_code"
}

fail() {
  exit_code="1"
  quit
}

help() {
  echo "detoul: a declarative tool for creating integration branches in git"
  echo "Usage:"
  echo "    detoul (test|make|push) branch"
  echo "    detoul help"
  quit
}

load-spec() {
  local load_detoul_spec_output="$(load-detoul-spec $1)"
  if [ "$?" != "0" ]; then
    echo "$load_detoul_spec_output"
    fail
  fi
}

save-spec() {
  cd "$GIT_WD"
  
  have_uncommitted_changes="$(git status --porcelain | wc -l)"
  if [ "$have_uncommitted_changes" != "0" ]; then
    git stash -u >/dev/null 2>&1
  fi

  (
    git checkout detoul-spec &&
    cat "$DETOUL_TMP/spec" | head -n -1 | grep -v "^$" > "$target" &&
    cat "$DETOUL_TMP/spec" | tail -n 1 | tr -d '\n' >> "$target" &&
    git add "$target" &&
    git commit --allow-empty -m "$1" &&
    git checkout "$DETOUL_ORIG_BRANCH"
  ) >/dev/null 2>&1
  
  if [ "$have_uncommitted_changes" != "0" ]; then
    git stash pop >/dev/null 2>&1
  fi

  cd - >/dev/null
}

if [ $# -lt 1 ]; then
  help
fi

export DETOUL_BRANCH="$2"

case "$1" in
  help)
    help
    ;;
  commands)
    echo "add-to"
    echo "cat"
    echo "edit"
    echo "help"
    echo "make"
    echo "push"
    echo "test"
    quit
    ;;
  options)
    case "$2" in
      add-to)
        echo "--rebase"
        echo "--squash"
        echo "--fixup"
        ;;
    esac
    quit
    ;;
  cat)
    load-spec
    cat "$DETOUL_TMP/spec"
    echo ""
    quit
    ;;
  edit)
    target="$2"
    load-spec
    if [ "$EDITOR" == "" ]; then
       EDITOR="vi"
    fi
    $EDITOR "$DETOUL_TMP/spec"
    save-spec "edited '$target'"
    quit
    ;;
  add-to)
    target="$2"
    load-spec
    addition="$3"
    op="take"
    mod=""
    shift; shift; shift
    while (($#)); do
      case "$1" in
        --rebase)
          op="rebase"
          ;;
        --squash|--fixup)
          mod="-squash"
          ;;
      esac
      shift
    done
    echo -n "$op$mod $addition" >> "$DETOUL_TMP/spec"
    save-spec "added to '$target': '$addition'"
    quit
    ;;
esac

load-spec filtered

detoul-base <"$DETOUL_TMP/spec"
exit_code="$?"
cd "$GIT_WD"

if [ "$exit_code" == "0" ]; then
  case "$1" in
    test)
      git branch -D "$DETOUL_BRANCH" >/dev/null 2>&1
      echo "Integration branch succesfully created."
      ;;
    make)
      git checkout "$DETOUL_BRANCH" >/dev/null 2>&1
      ;;
    push)
      git checkout "$DETOUL_BRANCH" >/dev/null 2>&1
      git push --set-upstream "$GIT_REMOTE" "$DETOUL_BRANCH" --force
      git checkout "$DETOUL_ORIG_BRANCH" >/dev/null 2>&1
      ;;
    *)
      git branch -D "$DETOUL_BRANCH" >/dev/null 2>&1
      echo "Unknown operation '$1'."
      fail
  esac
else
  git branch -D "$DETOUL_BRANCH" >/dev/null 2>&1
  echo "Failure."
fi
quit
