#!/bin/bash

exit_code="0"

cd "$GIT_WD"

have_uncommitted_changes="$(git status --porcelain | wc -l)"
if [ "$have_uncommitted_changes" != "0" ]; then
		git stash -u >/dev/null 2>&1
fi

quit() {
		git checkout "$GIT_BRANCH" >/dev/null 2>&1

		if [ "$have_uncommitted_changes" != "0" ]; then
				git stash pop >/dev/null 2>&1
		fi

		exit "$exit_code"
}

fail() {
		exit_code="1"
		quit
}

autocomplete() {
		branch_name="$(git branch -a | sed -e 's/remotes\/[[:alnum:]]\+\///g' | cut -c3- | grep "^$1" | head -n 1)"
		if [ "$branch_name" == "" ]; then
				echo "$1"
		else
				echo "$branch_name"
		fi
}

checkout() {
		echo "Checking out '$branch'..."
		(
				git checkout "$branch" >/dev/null 2>&1 &&
						git checkout -B "$DETOUL_BRANCH" >/dev/null 2>&1
		) || fail
		base_branch="$branch"
}

take() {
		if [ "$base_branch" == "" ]; then
				checkout
		else
				if [ "$1" == "squash" ]; then
						echo "Taking '$branch' (squashed)..."
				else
						echo "Taking '$branch'..."
				fi
				source_branch="$(git show-ref "$branch" | cut -d' ' -f1 | head -n 1)"
				(
						git checkout "$branch" >/dev/null 2>&1 &&
								git checkout "$DETOUL_BRANCH" >/dev/null 2>&1 &&
								git rebase --onto "$DETOUL_BRANCH" "$base_branch" "$source_branch" >/dev/null 2>&1 &&
								git checkout "$DETOUL_BRANCH" >/dev/null 2>&1 &&
								git reset --hard HEAD@{1} >/dev/null 2>&1
				) || fail

				if [ "$1" == "squash" ]; then
						(
								git reset --soft "$DETOUL_BRANCH@{1}" >/dev/null 2>&1 &&
								git commit -m "$2" >/dev/null
						) || fail
				fi
		fi
}

pick() {
		if [ "$base_branch" == "" ]; then
				branch="${command[1]}"
				checkout
		else
				echo "Picking '${command[1]}'..."
				(
						git cherry-pick "${command[1]}" >/dev/null 2>&1
				) || fail
		fi
}

base_branch=""

while read -r line; do
		if [ "$line" == "" ]; then
				continue
		fi
		command=($line)
		branch="$(autocomplete "${command[1]//\*/.*}")"
		case "${command[0]}" in
				checkout)
						checkout
						;;
				take)
						take
						;;
				take-squash)
						take squash "$(echo "$line" | sed -e 's/^take-squash\s\+[[:graph:]]\+\s\+//')"
						;;
				pick)
						pick
						;;
				exec)
						echo "Executing '${line/exec /}'..."
						bash -c "${line/exec /}"
						;;
		esac
done

quit
